:py:mod:`json2graph.decoder.decode_obj_project`
===============================================

.. py:module:: json2graph.decoder.decode_obj_project

.. autoapi-nested-parse::

   Functions to decode specificities of the object Project.

   Function's nomenclatures:
       - Functions that set one property are named: set_<subject>_<predicate>_<object>.
       - Functions that set multiple object properties are named: set_<subject>_relations.
       - Functions that set multiple data properties are named: set_<subject>_attributes.
       - Functions that set both object and data properties are named: set_<subject>_properties.
       - Functions that set default values: set_<subject>_defaults.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   json2graph.decoder.decode_obj_project.set_ontoumlelement_project_project
   json2graph.decoder.decode_obj_project.set_project_model_package
   json2graph.decoder.decode_obj_project.set_project_diagram_diagram
   json2graph.decoder.decode_obj_project.create_project_properties



.. py:function:: set_ontoumlelement_project_project(project_dict, ontouml_graph, element_counting)

   Sets the ontouml:project object property between an ontouml:Project (obj) and all its related entities (subj).

   :param project_dict: Project's data to have its fields decoded.
   :type project_dict: dict
   :param ontouml_graph: Knowledge graph that complies with the OntoUML Vocabulary.
   :type ontouml_graph: Graph
   :param element_counting: Dictionary with types and respective quantities present on graph.
   :type element_counting: dict


.. py:function:: set_project_model_package(project_dict, ontouml_graph)

   Sets ontouml:model relation between an ontouml:Project and its related model.

   :param project_dict: Project's data to have its fields decoded.
   :type project_dict: dict
   :param ontouml_graph: Knowledge graph that complies with the OntoUML Vocabulary.
   :type ontouml_graph: Graph


.. py:function:: set_project_diagram_diagram(project_dict, ontouml_graph)

   Sets the ontouml:diagram object property between an ontouml:Project and its related ontouml:Diagram entities.

   :param project_dict: Project's data to have its fields decoded.
   :type project_dict: dict
   :param ontouml_graph: Knowledge graph that complies with the OntoUML Vocabulary.
   :type ontouml_graph: Graph


.. py:function:: create_project_properties(json_data, ontouml_graph, element_counting)

   Main function for decoding objects of type 'Project'.

   Receives the whole JSON loaded data as a dictionary and manipulates it to create all properties in which the
   object's type is domain (every case) or range of (when related to an abstract class).

   This function considers that there may be multiple projects in the loaded JSON file.

   Created object properties:
       - ontouml:project (domain ontouml:OntoumlElement, range ontouml:Project)
       - ontouml:model (domain ontouml:Project, range ontouml:Package)
       - ontouml:diagram (domain ontouml:Project, range ontouml:Diagram)

   :param json_data: JSON's data to have its fields decoded loaded into a dictionary.
   :type json_data: dict
   :param ontouml_graph: Knowledge graph that complies with the OntoUML Vocabulary.
   :type ontouml_graph: Graph
   :param element_counting: Dictionary with types and respective quantities present on graph.
   :type element_counting: dict
