:py:mod:`json2graph.modules.utils_graph`
========================================

.. py:module:: json2graph.modules.utils_graph

.. autoapi-nested-parse::

   Util functions related to graphs. 



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   json2graph.modules.utils_graph.ontouml_ref
   json2graph.modules.utils_graph.load_ontouml_vocabulary
   json2graph.modules.utils_graph.load_graph_safely
   json2graph.modules.utils_graph.get_all_ids_for_type



Attributes
~~~~~~~~~~

.. autoapisummary::

   json2graph.modules.utils_graph.LOGGER


.. py:data:: LOGGER

   

.. py:function:: ontouml_ref(entity)

   Receives the name of the OntoUML Vocabulary's entity as a string and returns the corresponding URIRef.

   :param entity: OntoUML Vocabulary entity (class, property, or individual) to have its URIRef returned.
   :type entity: str
   :return: URIRef of the informed OntoUML Vocabulary's entity.
   :rtype: URIRef


.. py:function:: load_ontouml_vocabulary()

   Loads the OntoUML Vocabulary to the working memory. First tries to load from web resource, if fails, it tries to
   load form the local resource. If both options fail, calls error reporting function.

   :return: RDFLib graph loaded as object.
   :rtype: Graph


.. py:function:: load_graph_safely(ontology_file, format = 'not_provided')

   Safely load graph from file to working memory using arguments provided by the user, which are the file path
   and (optionally) the file type.

   :param ontology_file: Path to the ontology file to be loaded into the working memory.
   :type ontology_file: str
   :param format: Optional argument. Format of the file to be loaded.
   :type format: str
   :return: RDFLib graph loaded as object.
   :rtype: Graph


.. py:function:: get_all_ids_for_type(ontology_graph, element_type)

   Queries the graph for all elements of the given element_type and returns a list of their ids.

   :param ontology_file: Loaded ontology graph.
   :type ontology_file: Graph
   :param element_type: Type of the element (originally a JSON object) to be queried to have their ids returned .
   :type element_type: list[str]


