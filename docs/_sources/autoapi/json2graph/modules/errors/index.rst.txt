:py:mod:`json2graph.modules.errors`
===================================

.. py:module:: json2graph.modules.errors

.. autoapi-nested-parse::

   Functions related to the verification and treatment of identified ERROR cases. 



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   json2graph.modules.errors.report_error_requirement_not_met
   json2graph.modules.errors.report_error_end_of_switch
   json2graph.modules.errors.report_error_io_read
   json2graph.modules.errors.report_error_io_write



Attributes
~~~~~~~~~~

.. autoapisummary::

   json2graph.modules.errors.LOGGER


.. py:data:: LOGGER

   

.. py:function:: report_error_requirement_not_met(error_message)

   Reports the error caused when a requirement is not met. As this is a generic function, the error message
   parameter must be used to identify the error to the user.

   :param error_message: Message to be printed to the user indicating the detected error.
   :type error_message: str
   :raises ValueError: Always.


.. py:function:: report_error_end_of_switch(invalid_parameter, caller_function_name)

   Reports the error caused when an invalid parameter is provided to a switch case (if-else statements).
   Used to validate parameters.

   NOTE: caller_function_name can be obtained from 'current_function = inspect.stack()[0][3]'

   :param invalid_parameter: Invalid function parameter that caused the error.
   :type invalid_parameter: str
   :param caller_function_name: Name of the function in which the invalid parameter was used.
   :type caller_function_name: str
   :raises ValueError: Always.


.. py:function:: report_error_io_read(desired_content, file_description, error)

   Reports the error caused program cannot read or load the desired content (test_files or directories).

   :param desired_content: Name of the file used by the IO operation caused the error.
   :type desired_content: str
   :param file_description: Description of the file in desired_content.
   :type file_description: str
   :param error: Error raised by the IO operation.
   :type error: OSError
   :raises OSError: Always.


.. py:function:: report_error_io_write(desired_content, file_description, error)

   Reports the error caused program cannot save or write the desired content (test_files or directories).

   :param desired_content: Name of the file used by the IO operation caused the error.
   :type desired_content: str
   :param file_description: Description of the file in desired_content.
   :type file_description: str
   :param error: Error raised by the IO operation.
   :type error: OSError
   :raises OSError: Always.


