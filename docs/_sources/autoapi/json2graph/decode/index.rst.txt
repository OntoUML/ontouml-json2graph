:py:mod:`json2graph.decode`
===========================

.. py:module:: json2graph.decode

.. autoapi-nested-parse::

   Main function used as script to convert OntoUML JSON files into knowledge graphs, with the flexibility to
   customize the output and control the execution mode for different use cases.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   json2graph.decode.decode_ontouml_json2graph
   json2graph.decode.write_graph_file



Attributes
~~~~~~~~~~

.. autoapisummary::

   json2graph.decode.decoded_graph


.. py:function:: decode_ontouml_json2graph(json_path, base_uri = 'https://example.org#', graph_format = 'ttl', language = '', model_only = False, silent = True, correct = False, execution_mode = 'import')

   Main function for converting OntoUML JSON data to a Knowledge Graph.

   This function takes the path to a JSON file representing OntoUML model data provided by the user
   and converts it into a knowledge graph following the specified options.

   :param json_path: Path to the JSON file to be decoded provided by the user.
   :type json_path: str
   :param base_uri: Base URI to be used for generating URIs for ontology concepts.
                    Default is https://example.org#. (Optional)
   :type base_uri: str
   :param graph_format: Format for saving the resulting knowledge graph.
                        Default value is 'ttl' (Turtle syntax). (Optional)
   :type graph_format: str
   :param language: Language tag to be added to the ontology's concepts. (Optional)
   :type language: str
   :param model_only: If True, only the OntoUML model will be extracted without diagrammatic information. (Optional)
   :type model_only: bool
   :param silent: If True, suppresses intermediate communications and log messages during execution. (Optional)
   :type silent: bool
   :param correct: If True, attempts to correct potential errors during the conversion process. (Optional)
   :type correct: bool
   :param execution_mode: Information about the execution mode.
                          Valid values are 'import' (default), 'script', and 'test'. (Optional)
   :type execution_mode: str

   :return: JSON data decoded into a RDFLib's Graph that is compliant with the OntoUML Vocabulary.
   :rtype: Graph


.. py:function:: write_graph_file(ontouml_graph, json_path, graph_format)

   Saves the ontology graph into a file with syntax defined by the user.
   The file is saved inside the 'results' directory also created by this function.

   :param ontouml_graph: Graph compliant with the OntoUML Vocabulary.
   :type ontouml_graph: Graph
   :param json_path: Path to the input json file.
   :type json_path: str
   :param graph_format: Syntax selected by the user to save the graph.
   :type graph_format: str
   :return: Saved output file path.
   :rtype: str


.. py:data:: decoded_graph

   

